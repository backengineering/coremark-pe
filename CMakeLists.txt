# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(coremark-pe)

# Target: coremark-pe
set(CMKR_TARGET coremark-pe)
add_link_options("/DEBUG:FULL" "/LTCG")

set(coremark-pe_SOURCES
	"src/core_list_join.c"
	"src/core_main.c"
	"src/core_matrix.c"
	"src/core_portme.c"
	"src/core_state.c"
	"src/core_util.c"
	"inc/core_portme.h"
	"inc/coremark.h"
	cmake.toml
)

add_executable(coremark-pe)

target_sources(coremark-pe PRIVATE ${coremark-pe_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${coremark-pe_SOURCES})

target_compile_definitions(coremark-pe PRIVATE
	PERFORMANCE_RUN=1
	ITERATIONS=100000
)

target_compile_options(coremark-pe PRIVATE
	"/O2"
	"/GL"
	"/W0"
	"/MP"
)

target_include_directories(coremark-pe PRIVATE
	inc
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT coremark-pe)
endif()
